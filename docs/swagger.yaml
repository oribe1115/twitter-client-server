openapi: 3.0.0

info:
  description: "twitter-client-severについてのAPI"
  version: "1.0.0"
  title: "twitter-client-server API"
  termsOfService: "http://swagger.io/terms/"
paths:
  /authorize:
    get:
      tags:
        - authorize
      description: ツイッター連携の認証画面へのurlを返します
      responses:
        200:
          description: 認証用urlを取得できました
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    description: 認証用のurl
        500:
          description: urlの取得に失敗しました
  /authorize/callback:
    get:
      tags:
        - authorize
      description: 
        ツイッター連携におけるコールバック用のエンドポイントです
        クライアントサイドから叩くことはありません
      responses:
        200:
          description: アクセストークンの取得に成功しました
        500:
          description: アクセストークンの取得に失敗しました
  /users/me:
    get:
      tags:
        - user
      description: ユーザー自身の情報をを返します
      responses:
        200:
          description: 正常に取得できました
          content:
            application/json:
              schema:
                properties:
                  login:
                    type: boolean
                    example: true
                    description: ツイッターの認証情報が得られているか
                  user:
                    $ref: "#/components/schemas/User"
        500:
          description: 取得に失敗しました　または認証情報が得られていません
          content:
            application/json:
              schema:
                properties:
                  login:
                    type: boolean
                    example: false
                    description: ツイッターの認証情報が得られているか
  /users/{userID}:
    get:
      tags:
        - user
      description: ユーザーの情報を返します
      parameters:
        - $ref: "#/components/parameters/userIDInPath"
      responses:
        200:
          description: 正常に取得できました
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        500:
          description: 取得に失敗しました
  /tweet/{tweetID}/stamps/{stampID}:
    post:
      tags:
        - stamp
      description: 指定したメッセージに指定したスタンプを押します
      parameters:
        - $ref: "#/components/parameters/tweetIDInPath"
        - $ref: "#/components/parameters/stampIDInPath"
      responses:
        200:
          description: 正常にスタンプを押せました
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StampTweet"
        500:
          description: スタンプを押すのに失敗しました
  /tweet/{tweetID}/stamps:
    get:
      tags:
        - stamp
      description: 指定したツイートに押されているスタンプを全て取得します。
      parameters:
        - $ref: "#/components/parameters/tweetIDInPath"
      responses:
        200:
          description: 正常に取得できました
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Stamp"
        500:
          description: 取得に失敗しました
  /tweet/{tweetID}/stamps/{stampID}/destroy:
    post:
      tags:
        - stamp
      description: 指定したツイートに押されている指定したスタンプを外します。
      parameters:
        - $ref: "#/components/parameters/tweetIDInPath"
        - $ref: "#/components/parameters/stampIDInPath"
      responses:
        200:
          description: 正常にスタンプを外しました
        500:
          description: スタンプを外すのに失敗しました。もしくは該当するスタンプが存在しません
  /tweet/new:
    post:
      tags:
        - tweet
      description: ツイートを投稿します。
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewTweet"
      responses:
        200:
          description: 正常に投稿できました
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StampTweet"
  /tweet/{tweetID}/retweet:
    post:
      tags:
        - tweet
      description: 指定したツイートをリツイートします
      parameters:
        - $ref: "#/components/parameters/tweetIDInPath"
      responses:
        200:
          description: 正常にリツイートできました
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StampTweet"
        500:
          description: リツイートに失敗しました
  /tweet/{tweetID}/unretweet:
    post:
      tags:
        - tweet
      description: 指定したツイートのリツイートを取り消します
      parameters:
        - $ref: "#/components/parameters/tweetIDInPath"
      responses:
        200:
          description: 正常にリツイートを取り消しました
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StampTweet"
        500:
          description: リツイートの取り消しにに失敗しました
  /tweet/{tweetID}/favorites:
    post:
      tags:
        - tweet
      parameters:
        - $ref: "#/components/parameters/tweetIDInPath"
      description: 指定したツイートにいいね（お気に入り）をつけます
      responses:
        200:
          description: 正常にいいねをつけました
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StampTweet"
        500:
          description: いいねをつけるのに失敗しました
  /tweet/{tweetID}/unfavorites:
    post:
      tags:
        - tweet
      description: 指定したツイートのいいね（お気に入り）を外します
      parameters:
        - $ref: "#/components/parameters/tweetIDInPath"
      responses:
        200:
          description: 正常にいいねを外しました
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StampTweet"
        500:
          description: いいねを外すのに失敗しました            
  /statuses/home_timeline:
    get:
      tags:
        - timeline
      description: ホームのタイムラインを取得します
      parameters:
        - $ref: "#/components/parameters/countInQuery"
      responses:
        200:
          description: 正常に取得できました
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StampTweet"
        500:
          description: 取得に失敗しました
  /lists/list:
    get:
      tags:
        - timeline
      description: ユーザーのリスト一覧を返します。
      responses:
        200:
          description: 正常に取得できました
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: "#/components/schemas/List"
        500:
          description: 取得に失敗しました
  /lists/{listID}/statuses:
    get:
      tags:
       - timeline
      description: リストのタイムラインを取得します
      parameters:
        - in: path
          name: listID
          required: true
          schema:
            type: integer
          description: タイムラインを取得するリストのID
        - $ref: "#/components/parameters/countInQuery"
      responses:
        200:
          description: 正常に取得できました
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StampTweet"
        500:
          description: 取得に失敗しました
  /statuses/{userID}:
    get:
      tags:
        - timeline
      description: そのユーザーのツイート群を返します
      parameters:
        - $ref: "#/components/parameters/countInQuery"
        - $ref: "#/components/parameters/userIDInPath"
      responses:
        200:
          description: 正常に取得できました
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StampTweet"
        500:
          description: 取得に失敗しました


components:
  parameters:
    tweetIDInPath:
      name: tweetID
      description: ツイートのID
      in: path
      required: true
      schema:
        type: integer
        format: int64
    stampIDInPath:
      name: stampID
      description: スタンプのID
      in: path
      required: true
      schema:
        type: string
    userIDInPath:
      name: userID
      description: ユーザーID
      in: path
      required: true
      schema:
        type: integer
        format: int64
    countInQuery:
      name: count
      description: 取得件数
      in: query
      schema:
        type: integer

  schemas:
    Tweet:
      description:
        anacondaのTweet構造体
        ここには主要なものしか書いてません
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ツイートのID
        text:
          type: string
          description: ツイートの内容
        user:
          $ref: "#/components/schemas/User"
        created_at:
          type: string
          description: ツイートした日時
        favorited_count:
          type: integer
          description: ツイートへのいいねの数
        favorited:
          type: boolean
          description: ユーザーがいいねをつけているか否か
        retweet_count:
          type: integer
          description: ツイートへのリツイートの数
        retweeted:
          type: boolean
          description: ユーザーがリツイートしているか否か
        in_reply_to_screen_name:
          type: string
          description: このツイートがリプライである場合、リプライ相手のscreen_name
        in_reply_to_user_id:
          type: integer
          format: int64
          description: このツイートがリプライである場合、リプライ相手のid
        in_reply_to_status_id:
          type: integer
          format: int64
          description: このツイートがリプライである場合、リプライ先のツイートのid
        entities:
          $ref: "#/components/schemas/Entities"
        
    User:
      description: 
        anacondaのUser構造体
        ここには主要なものしか書いていません
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ユーザーのid
        name:
          type: string
          description: ユーザーの名前
        screen_name:
          type: string
          description: ユーザー名(@...)
        default_profile:
          type: boolean
          description: プロフィールが初期設定のままであるか否か
        default_profile_image:
          type: boolean
          description: プロフィール画像が初期設定のままであるか否か
        profile_image_url_https:
          type: string
          description: ユーザー画像のURL
        profile_banner_url:
          type: string
          description: バーナー画像のURL
        description:
          type: string
          description: プロフィールの説明欄のテキスト
        statuses_count:
          type: integer
          description: ツイートの数
        favourites_count:
          type: integer
          description: いいねの数
        followers_count:
          type: integer
          description: フォロワーの数
        friends_count:
          type: integer
          description: フレンド(フォロイー)の数
        following:
          type: boolean
          description: このユーザーをフォローしているか
        follow_request_sent:
          type: boolean
          description: このユーザーにフォローリクエストを出しているか否か
        protected:
          type: boolean
          description: アカウントに鍵を掛けているか否か
        location:
          type: string
          description: 所在地
    
    Entities:
      description: 
        ツイートに付随する情報
        anacondaのEntities構造体
      type: object
      properties:
        hashtags:
          type: array
          description: ハッシュタグの情報
          items:
            type: object
            properties:
              text:
                type: string
                description: ハッシュタグのテキスト
              indices:
                type: array
                description: ハッシュタグの開始位置・終了位置を指定
                items:
                  type: integer
        urls:
          type: array
          description: URLの情報
          items:
            type: object
            properties:
              url:
                type: string
              expanded_url:
                type: string
              display_url:
                type: string
              indices:
                type: array
                items:
                  type: integer
        user_mentions:
          type: array
          items:
            type: object
            properties:
              name: 
                type: string
              screen_name:
                type: string
              id:
                type: integer
                format: int64
              indices:
                type: array
                items:
                  type: integer
        media:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                format: int64
              media_url:
                type: string
              url:
                type: string
              expanded_url:
                type: string
              display_url:
                type: string
              size:
                type: MediaSizes
    
    Stamp:
      description: ツイートに押されたスタンプの情報
      type: object
      properties:
        stamp_id:
          type: string
          description: twemojiの絵文字のid
        tweet_id:
          type: integer
          format: int64
          description: ツイートのid
        user_id:
          type: integer
          format: int64
          description: スタンプを押した人のユーザーid
        user_screen_name:
          type: string
          description: スタンプを押した人のユーザー名(@...)
        count:
          type: integer
          description: 押されたスタンプの数
        created_at:
          type: string
          description: 最初に押した日時
        updated_at:
          type: string
          description: 最後に押した日時

    StampTweet:
      description: スタンプの情報付きのツイート情報
      type: object
      properties:
        tweet:
          $ref: "#/components/schemas/Tweet"
        stamps:
          type: array
          items:
            $ref: "#/components/schemas/Stamp"

    NewTweet:
      description: 投稿するツイートの情報
      type: object
      properties:
        text:
          type: string
          description: ツイートの内容
    
    List:
      description:
        anacondaのList構造体
        ここには主要なものしか書いていません
      type: object
      properties:
        name:
          type: string
          description: リスト名
        id:
          type: integer
          format: int64
          description: リストのid
        description:
          type: string
        user:
          $ref: "#/components/schemas/User"
        url:
          type: string
        member_count:
          type: integer

              